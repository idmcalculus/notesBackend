{"version":3,"sources":["services/notes.js","Note.js","Notification.js","Footer.js","App.js","index.js"],"names":["axios","get","then","response","data","newObject","post","id","put","delete","Note","note","deleteNote","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","catch","error","setTimeout","n","map","key","find","changedNote","updatedNote","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","Math","random","createdNote","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddcf330a.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = 'api/notes';\n\nconst getAll = () => {\n  return axios\n  .get(baseUrl)\n  .then(response => response.data);\n};\n\nconst create = newObject => {\n  return axios\n  .post(baseUrl, newObject)\n  .then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  return axios\n  .put(`${baseUrl}/${id}`, newObject)\n  .then(response => response.data);\n};\n\nconst deleteNote = (id) => {\n\treturn axios.delete(`${baseUrl}/${id}`);\n};\n\n\nexport default { getAll, create, update, deleteNote };","import React from 'react';\n\nconst Note = ({ note, deleteNote, toggleImportance }) => {\n\tconst label = note.important ? 'make not important' : 'make important';\n\n\treturn (\n\t\t<>\n\t\t\t<li className='note'>\n\t\t\t\t{note.content} &nbsp;\n\t\t\t\t<button onClick={()=>{deleteNote(note.id)}}>delete</button> &nbsp;\n\t\t\t\t<button onClick={toggleImportance}>{label}</button>\n\t\t\t</li>\n\t\t</>\n\t)\n}\n\nexport default Note;","import React from 'react';\n\nconst Notification = ({ message }) => {\n\tif (message === null) {\n\t  return null;\n\t}\n  \n\treturn (\n\t  <div className=\"error\">\n\t\t{message}\n\t  </div>\n\t)\n  }\n\nexport default Notification;","import React from 'react';\n\nconst Footer = () => {\n\tconst footerStyle = {\n\t  color: 'green',\n\t  fontStyle: 'italic',\n\t  fontSize: 16\n\t};\n  \n\treturn (\n\t  <div style={footerStyle}>\n\t\t<br />\n\t\t<em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n\t  </div> \n\t)\n};\n\nexport default Footer;","import React, {useState, useEffect} from 'react';\nimport noteService from './services/notes';\nimport Note from './Note';\nimport Notification from './Notification';\nimport './index.css';\nimport Footer from './Footer';\n\nconst App = () => {\n\t\n\tconst [notes, setNotes] = useState([]);\n\tconst [newNote, setNewNote] = useState('');\n\tconst [showAll, setShowAll] = useState(true);\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\n\tuseEffect(() => {\n\t\tnoteService\n\t\t.getAll()\n\t\t.then(initialNotes => {\n\t\t\tsetNotes(initialNotes);\n\t\t});\n\t}, []);\n\n\tconst addNote = (event) => {\n\t\tevent.preventDefault();\n\t\tconst noteObject = {\n\t\t  content: newNote,\n\t\t  date: new Date(),\n\t\t  important: Math.random() < 0.5,\n\t\t};\n\n\t\tnoteService\n\t\t.create(noteObject)\n\t\t.then(createdNote => {\n\t\t\tsetNotes(notes.concat(createdNote));\n\t\t\tsetNewNote('');\n\t\t});\n\t};\n\n\tconst notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n\tconst deleteNote = (id) => {\n\t\tnoteService\n\t\t.deleteNote(id)\n\t\t.then(response => {\n\t\t\tif (response) {\n\t\t\t\tsetNotes(notes.filter(note => id !== note.id));\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tsetErrorMessage(\n\t\t\t\t`This note does not exist on the server, removing it from view`\n\t\t\t  );\n\t\t\t  setTimeout(() => {\n\t\t\t\tsetErrorMessage(null);\n\t\t\t  }, 5000);\n\t\t\tsetNotes(notes.filter(n => n.id !== id));\n\t\t});\n\t};\n\n\tconst handleNoteChange = (event) => {\n\t\tsetNewNote(event.target.value);\n\t};\n\n\tconst toggleImportanceOf = id => {\n\t\tconst note = notes.find(n => n.id === id);\n\t\tconst changedNote = { ...note, important: !note.important };\n\t  \n\t\tnoteService\n\t\t.update(id, changedNote)\n\t\t.then(updatedNote => {\n\t\t  setNotes(notes.map(note => note.id !== id ? note : updatedNote));\n\t\t})\n\t\t.catch(error => {\n\t\t\tsetErrorMessage(\n\t\t\t\t`Note '${note.content}' was already removed from server`\n\t\t\t  );\n\t\t\t  setTimeout(() => {\n\t\t\t\tsetErrorMessage(null);\n\t\t\t  }, 5000);\n\t\t\tsetNotes(notes.filter(n => n.id !== id));\n\t\t});\n\t};\n\t\n\n\treturn (\n\t  <div>\n\t\t<h1>Notes</h1>\n\t\t<Notification message={errorMessage} />\n\t\t<div>\n\t\t\t<button onClick={() => setShowAll(!showAll)}>\n\t\t\t\tshow {showAll ? 'important' : 'all' }\n\t\t\t</button>\n      \t</div>\n\t\t<ul>\n\t\t  {notesToShow.map((note) => \n\t\t  \t<div key={note.id}>\n\t\t\t\t<Note note={note} deleteNote={deleteNote} toggleImportance={()=>toggleImportanceOf(note.id)} />\n\t\t\t</div>\n\t\t  )}\n\t\t</ul>\n\t\t<form onSubmit={addNote}>\n\t\t\t<input value={newNote}\n\t\t\t\tonChange={handleNoteChange}\n\t\t\t/>\n\t\t\t<button type=\"submit\">save</button>\n      \t</form> \n\t\t<Footer />\n\t  </div>\n\t)\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root'));"],"sourceRoot":""}